#!/usr/bin/env bash

# ~/.macos — https://mths.be/macos
# Modified by Luis Fernandes aka Apidcloud 
# Run without downloading:
# curl https://raw.githubusercontent.com/Apidcloud/dotfiles/master/.macOS | bash

# Set computer name
COMPUTERNAME="Luis' MacBook Pro"
HOSTNAME='Luis-MacBook-Pro'
LOCALHOSTNAME='Luis-MacBook-Pro'

# Close any open System Preferences panes, to prevent them from overriding
# settings we’re about to change
osascript -e 'tell application "System Preferences" to quit'

# Ask for the administrator password upfront
sudo -v

# Keep-alive: update existing `sudo` time stamp until `.macos` has finished
while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &

###############################################################################
# Apidcloud's Customizations                                                  #
###############################################################################

echo "Hello $(whoami)! Let's get you set up."

echo "mkdir -p ${HOME}/workspace/Git/Github"
mkdir -p "${HOME}/workspace/Git/Github"
mkdir -p "${HOME}/workspace/Git/Gitlab"
mkdir -p "${HOME}/workspace/Git/Bitbucket"

echo "installing homebrew"
# install homebrew https://brew.sh
/usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"

echo "brew installing stuff"
# hub: a github-specific version of git
# ffmpeg: eventually I'll need this for something
# tree: really handy for listing out directories in text
# bat: A cat(1) clone with syntax highlighting and Git integration.
brew install git hub tree ffmpeg bat zsh git-delta nvm

echo "installing node (via n-install)"
curl -L https://git.io/n-install | bash

echo "node --version: $(node --version)"
echo "npm --version: $(npm --version)"

echo "installing apps with brew cask"
brew cask install brave-browser visual-studio-code skype \
spotify rectangle dozer nightowl krisp keybase odrive \
openvpn-connect pock sharemouse zotero steam iterm2

echo "installing oh-my-zsh"
sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"

echo "cloning powerlevel10k theme"
git clone https://github.com/romkatv/powerlevel10k.git $ZSH_CUSTOM/themes/powerlevel10k

echo "cloning zsh plugins"
git clone git://github.com/zsh-users/zsh-autosuggestions $ZSH_CUSTOM/plugins/zsh-autosuggestions
git clone https://github.com/zsh-users/zsh-syntax-highlighting.git $ZSH_CUSTOM/plugins/zsh-syntax-highlighting

echo "Generating an ED25519 token for GitHub" 
mkdir -p ~/.ssh
# One for GitHub
echo "Going to generate 2 ssh keys (github and gitlab)"
echo "Leave the first as default, and add _gitlab to the second" 
ssh-keygen -t ed25519 -C "luisapidcloud@hotmail.com"
# Another for Gitlab
ssh-keygen -t ed25519 -C "luisapidcloud@hotmail.com"
eval "$(ssh-agent -s)"
echo "the ssh config file will be cloned and symlinked shortly"

echo "cloning dotfiles..."
git clone git@github.com:apidcloud/dotfiles.git "${HOME}/dotfiles"
echo "symlinking ~/.ssh/config file..."
ln -s "${HOME}/dotfiles/.ssh/config" "${HOME}/.ssh/config" 
echo "run 'pbcopy < ~/.ssh/id_ed25519.pub' and paste that into GitHub"
echo "run 'pbcopy < ~/.ssh/id_ed25519_gitlab.pub' and paste that into Gitlab"
echo "symlinking other dotfiles..."
ln -s "${HOME}/dotfiles/.zshrc" "${HOME}/.zshrc"
ln -s "${HOME}/dotfiles/.gitignore_global" "${HOME}/.gitignore_global"
ln -s "${HOME}/dotfiles/.gitconfig" "${HOME}/.gitconfig"

# get bat and delta all configured
mkdir -p "${HOME}/.config/bat/themes"
ln -s "${HOME}/dotfiles/.config/bat/config" "${HOME}/.config/bat/config"
git clone https://github.com/batpigandme/night-owlish "${HOME}/.config/bat/themes/night-owlish"
bat cache --build

# create local directory for custom fonts
echo "installing source code pro powerline font..."
mkdir ~/.local/share/fonts
cp ~/dotfiles/fonts/SourceCodePro+Powerline+Awesome+Regular.ttf ~/.local/share/fonts
fc-cache -f -v

printf "You now need to set iTerm preferences manually: \n\
 font: iTerm → Preferences → Profiles → Text → Font \n\
 colour: iTerm → Preferences → Profiles → Colors → Color Presets → Import \n\
\n\
"

echo "making system modifications:"

###############################################################################
# Terminal & iTerm 2                                                          #
###############################################################################

# Enable Secure Keyboard Entry in Terminal.app
# See: https://security.stackexchange.com/a/47786/8918
defaults write com.apple.terminal SecureKeyboardEntry -bool true

###############################################################################
# General UI/UX                                                               #
###############################################################################

## Set computer name (as done via System Preferences → Sharing)
sudo scutil --set ComputerName $COMPUTERNAME
sudo scutil --set HostName $HOSTNAME
sudo scutil --set LocalHostName $LOCALHOSTNAME
sudo defaults write /Library/Preferences/SystemConfiguration/com.apple.smb.server NetBIOSName -string $LOCALHOSTNAME

# Save to disk (not to iCloud) by default
defaults write NSGlobalDomain NSDocumentSaveNewDocumentsToCloud -bool false

# Reveal IP address, hostname, OS version, etc. when clicking the clock
# in the login window
sudo defaults write /Library/Preferences/com.apple.loginwindow AdminHostInfo HostName

# Disable auto-correct
defaults write NSGlobalDomain NSAutomaticSpellingCorrectionEnabled -bool false

###############################################################################
# Finder                                                                      #
###############################################################################

# Finder: show all filename extensions
defaults write NSGlobalDomain AppleShowAllExtensions -bool true

# Finder: do not show status bar
defaults write com.apple.finder ShowStatusBar -bool false

# Finder: show path bar
defaults write com.apple.finder ShowPathbar -bool true

# Do not display full POSIX path as Finder window title
defaults write com.apple.finder _FXShowPosixPathInTitle -bool false

# Keep folders on top when sorting by name
defaults write com.apple.finder _FXSortFoldersFirst -bool true

# When performing a search, search the current folder by default
defaults write com.apple.finder FXDefaultSearchScope -string "SCcf"

# Disable the warning when changing a file extension
defaults write com.apple.finder FXEnableExtensionChangeWarning -bool false

# Enable spring loading for directories
defaults write NSGlobalDomain com.apple.springing.enabled -bool true

# Reduce the spring loading delay for directories
defaults write NSGlobalDomain com.apple.springing.delay -float 0.2

# Avoid creating .DS_Store files on network or USB volumes
defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool true
defaults write com.apple.desktopservices DSDontWriteUSBStores -bool true

# Automatically open a new Finder window when a volume is mounted
defaults write com.apple.frameworks.diskimages auto-open-ro-root -bool true
defaults write com.apple.frameworks.diskimages auto-open-rw-root -bool true
defaults write com.apple.finder OpenWindowForNewRemovableDisk -bool true

# Use column view in all Finder windows by default
# Four-letter codes for the other view modes: `icnv`, `clmv`, `Flwv`, `Nlsv`
defaults write com.apple.finder FXPreferredViewStyle -string "clmv"

###############################################################################
# Mail                                                                        #
###############################################################################

# Display emails in threaded mode, sorted by date (newest at the top)
defaults write com.apple.mail DraftsViewerAttributes -dict-add "DisplayInThreadedMode" -string "yes"
defaults write com.apple.mail DraftsViewerAttributes -dict-add "SortedDescending" -string "yes"
defaults write com.apple.mail DraftsViewerAttributes -dict-add "SortOrder" -string "received-date"

###############################################################################
# Spotlight                                                                   #
###############################################################################

# Change indexing order and disable some file types
defaults write com.apple.spotlight orderedItems -array \
	'{"enabled" = 1;"name" = "APPLICATIONS";}' \
	'{"enabled" = 1;"name" = "SYSTEM_PREFS";}' \
	'{"enabled" = 1;"name" = "DIRECTORIES";}' \
	'{"enabled" = 1;"name" = "PDF";}' \
	'{"enabled" = 1;"name" = "DOCUMENTS";}' \
	'{"enabled" = 1;"name" = "IMAGES";}' \
	'{"enabled" = 1;"name" = "PRESENTATIONS";}' \
	'{"enabled" = 1;"name" = "SPREADSHEETS";}' \
	'{"enabled" = 0;"name" = "FONTS";}' \
	'{"enabled" = 0;"name" = "MESSAGES";}' \
	'{"enabled" = 0;"name" = "CONTACT";}' \
	'{"enabled" = 0;"name" = "EVENT_TODO";}' \
	'{"enabled" = 0;"name" = "BOOKMARKS";}' \
	'{"enabled" = 0;"name" = "MUSIC";}' \
	'{"enabled" = 0;"name" = "MOVIES";}' \
	'{"enabled" = 0;"name" = "SOURCE";}'
# Load new settings before rebuilding the index
killall mds > /dev/null 2>&1
# Make sure indexing is enabled for the main volume
sudo mdutil -i on / > /dev/null
# Rebuild the index from scratch
sudo mdutil -E / > /dev/null

###############################################################################
# Screen
###############################################################################

## Enable sub-pixel rendering on non-Apple LCDs.
## https://github.com/kevinSuttle/macOS-Defaults/issues/17#issuecomment-266633501
defaults write -g AppleFontSmoothing -int 1

## Disable and kill Dashboard
defaults write com.apple.dashboard mcx-disabled -bool true

## Screenshot
## Save screenshots in PNG format (other options: BMP, GIF, JPG, PDF, TIFF)
defaults write com.apple.screencapture type -string "png"

## Save screenshots to the documents folders
defaults write com.apple.screencapture location -string "${HOME}/Documents"

###############################################################################
# Dock, Dashboard, and hot corners                                            #
###############################################################################

# Automatically hide and show the Dock
defaults write com.apple.dock autohide -bool true

# Hot corners
# Possible values:
#  0: no-op
#  2: Mission Control
#  3: Show application windows
#  4: Desktop
#  5: Start screen saver
#  6: Disable screen saver
#  7: Dashboard
# 10: Put display to sleep
# 11: Launchpad
# 12: Notification Center
# 13: Lock Screen
# 1048576 is ⌘ I think
# Top left screen corner → Mission Control
defaults write com.apple.dock wvous-tl-corner -int 2
defaults write com.apple.dock wvous-tl-modifier -int 1048576
# Top right screen corner → Notification Centre
defaults write com.apple.dock wvous-tr-corner -int 12
defaults write com.apple.dock wvous-tr-modifier -int 1048576
# Bottom left screen corner → Lock Screen
defaults write com.apple.dock wvous-bl-corner -int 13
defaults write com.apple.dock wvous-bl-modifier -int 1048576
# Bottom right screen corner → Desktop
defaults write com.apple.dock wvous-br-corner -int 4
defaults write com.apple.dock wvous-br-modifier -int 1048576

###############################################################################
# Kill affected applications                                                  #
###############################################################################

for app in "Activity Monitor" \
  "cfprefsd" \
  "Mail" \
  "Finder" \  
  "SystemUIServer" \
  "Dock"; do
  killall "${app}" &> /dev/null
done

# Wait a bit before moving on...
sleep 1

# ...and then.
echo "Success! Defaults are set."
echo "Note that some of these changes require a logout/restart to take effect."

printf "TODO:\n\
install: \n\
  Gifski (App Store) \n\
  Dato (App Store) \n\
  LastPass Password Manager (App Store) \n\
  The Unarchiver (App Store)
  Bear (App Store) \n\
  Agenda (App Store) \n\
  WhatsApp  (App Store) \n\
  Microsoft Office \n\
Restart Terminal.app\n\
Log in to literally everything \n\
"
